<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ymwang.park.dao.ChargeMapper">
  <resultMap id="BaseResultMap" type="com.ymwang.park.model.Charge">
    <id column="charge_id" jdbcType="VARCHAR" property="chargeId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="park_id" jdbcType="VARCHAR" property="parkId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="money" jdbcType="INTEGER" property="money" />
    <result column="car_number" jdbcType="VARCHAR" property="carNumber" />
    <result column="enter_time" jdbcType="TIMESTAMP" property="enterTime" />
    <result column="out_time" jdbcType="TIMESTAMP" property="outTime" />
    <result column="valid" jdbcType="CHAR" property="valid" />
  </resultMap>
  <resultMap id="queryDailyIncome" type="com.ymwang.park.dto.Charge.DailyIncomeDto">
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="money" jdbcType="INTEGER" property="money" />
    <result column="parkDate" jdbcType="TIMESTAMP" property="parkDate" />
    <result column="parkName" jdbcType="VARCHAR" property="parkName" />
  </resultMap>
  <resultMap id="queryParkIncome" type="com.ymwang.park.dto.Charge.ParkIncomeByParkId">
    <result column="parkId" jdbcType="VARCHAR" property="parkId" />
    <result column="money" jdbcType="INTEGER" property="money" />
  </resultMap>

  <sql id="Base_Column_List">
    charge_id, user_id, park_id, user_name, money, car_number, enter_time, out_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from charge
    where charge_id = #{chargeId,jdbcType=VARCHAR}
  </select>
 <select id="queryDailyIncome" parameterType="java.util.HashMap"  resultMap="queryDailyIncome">
    select date_format(out_time ,'%Y-%m-%d' ) as parkDate,
      count(user_id) as num, sum(money) as  money,(select park_name from park where park_id = #{parkId}) as parkName
    from charge where park_id = #{parkId} and
    date_format(out_time ,'%Y-%m-%d' ) between #{startDate} and #{endDate} and valid='1'
    group by date_format(out_time ,'%Y-%m-%d' )
  </select>
  <select id="allParkDailyIncome"   resultMap="queryDailyIncome">
    select date_format(t1.out_time ,'%Y-%m-%d' ) as parkDate,
      count(t1.user_id) as num, sum(t1.money) as  money,t2.park_name as parkName
    from charge as t1, park as t2 where
      t1.park_id=t2.park_id  and t1.valid='1' group by date_format(t1.out_time ,'%Y-%m-%d' ) ,t2.park_name

   </select>
  <select id="queryParkIncome" parameterType="java.util.HashMap"  resultMap="queryParkIncome">
    select park_id as parkId,
    sum(money) as  money from charge where
    date_format(out_time ,'%Y-%m' ) = #{month} AND valid='1'
    group by park_id
  </select>
  <select id="queryCharge" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from charge
    where user_id = #{userId,jdbcType=VARCHAR} AND valid='1'
  </select>
  <select id="parkCharge" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from charge
    where user_id = #{userId,jdbcType=VARCHAR} AND valid='2'
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from charge
    where charge_id = #{chargeId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.ymwang.park.model.Charge">
    insert into charge (charge_id, user_id, park_id, 
      user_name, money, car_number, 
      enter_time, out_time,valid)
    values (#{chargeId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{parkId,jdbcType=VARCHAR}, 
      #{userName,jdbcType=VARCHAR}, #{money,jdbcType=INTEGER}, #{carNumber,jdbcType=VARCHAR}, 
      #{enterTime,jdbcType=TIMESTAMP}, #{outTime,jdbcType=TIMESTAMP},#{valid,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ymwang.park.model.Charge">
    insert into charge
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="chargeId != null">
        charge_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="parkId != null">
        park_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="carNumber != null">
        car_number,
      </if>
      <if test="enterTime != null">
        enter_time,
      </if>
      <if test="outTime != null">
        out_time,
      </if>
      <if test="valid != null">
        valid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="chargeId != null">
        #{chargeId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="parkId != null">
        #{parkId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        #{money,jdbcType=INTEGER},
      </if>
      <if test="carNumber != null">
        #{carNumber,jdbcType=VARCHAR},
      </if>
      <if test="enterTime != null">
        #{enterTime,jdbcType=TIMESTAMP},
      </if>
      <if test="outTime != null">
        #{outTime,jdbcType=TIMESTAMP},
      </if>
      <if test="valid != null">
        #{valid,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ymwang.park.model.Charge">
    update charge
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="parkId != null">
        park_id = #{parkId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=INTEGER},
      </if>
      <if test="carNumber != null">
        car_number = #{carNumber,jdbcType=VARCHAR},
      </if>
      <if test="enterTime != null">
        enter_time = #{enterTime,jdbcType=TIMESTAMP},
      </if>
      <if test="outTime != null">
        out_time = #{outTime,jdbcType=TIMESTAMP},
      </if>
      <if test="valid != null">
        valid=#{valid,jdbcType=CHAR},
      </if>
    </set>
    where charge_id = #{chargeId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ymwang.park.model.Charge">
    update charge
    set user_id = #{userId,jdbcType=VARCHAR},
      park_id = #{parkId,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      money = #{money,jdbcType=INTEGER},
      car_number = #{carNumber,jdbcType=VARCHAR},
      enter_time = #{enterTime,jdbcType=TIMESTAMP},
      out_time = #{outTime,jdbcType=TIMESTAMP},
      valid=#{valid,jdbcType=CHAR}
    where charge_id = #{chargeId,jdbcType=VARCHAR}
  </update>
</mapper>